generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AccountType {
  ADMIN
  STUDENT
  OFFICIAL
  STAFF
  WORKER
  SECURITY
}

enum Gender {
  M 
  F
}

enum RoomType {
  Seater1
  Seater2
  Seater4
}

model User {
  id                      Int                 @id @default(autoincrement())
  email                   String              @unique @db.VarChar(255)
  password                String              @db.VarChar(255)
  accountType             AccountType
  createdAt               DateTime            @default(now())  @db.Timestamp(6)
  token                   String?             @default("") @db.VarChar(255) 
  resetPasswordExpiresIn  DateTime            @default(now())  @db.Timestamp(6)
  instituteStudent        InstituteStudent?
  worker                  Worker?
  security                Security?
  official                Official?
  announcements           Announcement[]
}

model OTP {
  id            Int           @id @default(autoincrement())
  otp           String        @db.VarChar(255)
  email         String        @db.VarChar(255)
  createdAt     DateTime      @default(now()) @db.Timestamptz
  expiresAt     DateTime?     @db.Timestamptz
}

// add name obtained from OFFICIAL MAIL ID
model InstituteStudent {
  id                Int             @id @default(autoincrement())
  regNo             String          @db.VarChar(255)
  rollNo            String          @db.VarChar(255)
  name              String          @db.VarChar(255)
  year              String          @db.VarChar(255)  
  branch            String          @db.VarChar(255)
  gender            Gender
  pwd               Boolean        
  community         String          @db.VarChar(255)
  aadharNumber      String          @db.VarChar(255)
  dob               DateTime
  bloodGroup        String          @db.VarChar(255)
  fatherName        String          @db.VarChar(255)
  motherName        String          @db.VarChar(255)
  phone             String          @db.VarChar(255)
  parentsPhone      String          @db.VarChar(255)
  emergencyPhone    String          @db.VarChar(255)
  address           String          @db.VarChar(1000)
  photo             String          @db.VarChar(255)
  isHosteller       Boolean
  outingRating      String          @db.VarChar(255)
  disciplineRating  String          @db.VarChar(255)
  user              User            @relation(fields: [userId],references: [id])
  userId            Int             @unique
}

model Worker {
  id            Int           @id @default(autoincrement())
  staffId       String        @db.VarChar(255)
  name          String        @db.VarChar(255)
  designation   String        @db.VarChar(255)
  gender        Gender       
  phone         String        @db.VarChar(255)
  user          User          @relation(fields: [userId], references: [id])
  userId        Int           @unique
}

model Security {
  id            Int           @id @default(autoincrement())
  securityId    String        @db.VarChar(255)
  name          String        @db.VarChar(255)
  designation   String        @db.VarChar(255)
  gender        Gender       
  phone         String        @db.VarChar(255)
  user          User          @relation(fields: [userId], references: [id])
  userId        Int           @unique
  hostelBlock   HostelBlock?
}

model Official {
  id            Int           @id @default(autoincrement())
  empId         String        @db.VarChar(255)
  name          String        @db.VarChar(255)
  designation   String        @db.VarChar(255)
  gender        Gender       
  phone         String        @db.VarChar(255)
  user          User          @relation(fields: [userId], references: [id])
  userId        Int           @unique
  hostelBlock   HostelBlock?  
}

model Announcement {
  id             Int            @id @default(autoincrement())
  title          String         @db.VarChar(255)
  textContent    String         @db.VarChar(255)
  fileContent    String[]       @db.VarChar(255)
  createdAt      DateTime       @default(now()) @db.Timestamp(6)
  createdBy      User           @relation(fields: [createdById], references: [id])
  createdById    Int 
}

model HostelBlock {
  id            Int           @id @default(autoincrement())
  name          String        @db.VarChar(255)
  blockId       String        @db.VarChar(255)
  image         String        @db.VarChar(255)
  roomType      RoomType
  gender        Gender
  floorCount    Int
  capacity      Int
  warderId      Int           @unique
  warden        Official      @relation(fields: [warderId],references: [id])
  securityId    Int           @unique
  security      Security      @relation(fields: [securityId],references: [id])
}

model MessHall {
  id            Int           @id @default(autoincrement())
  name          String        @db.VarChar(255)
  hallName      String        @db.VarChar(255)
  gender        Gender
  capacity      Int
}